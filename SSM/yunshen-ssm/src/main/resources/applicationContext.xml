<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:util="http://www.springframework.org/schema/util"

       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache.xsd
        http://www.springframework.org/schema/tool
        http://www.springframework.org/schema/tool/spring-tool.xsd
">

    <!-- 引入mydata.properties配置文件   -->
    <bean name="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:db.properties"></property>
        <property name="fileEncoding" value="UTF-8"></property>
     </bean>

    <!-- 告诉spring扫描范围（小范围效率高）-->
    <context:component-scan base-package="org.spoto.service"></context:component-scan>


<!--  配置数据源  -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.mysql.driverClassName}"/>
        <property name="url" value="${jdbc.mysql.url}"/>
        <property name="username" value="${jdbc.mysql.username}"/>
        <property name="password" value="${jdbc.mysql.password}"/>
    </bean>

<!--  SqlSessionFactory  -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--    数据库连接池    -->
        <property name="dataSource" ref="dataSource"/>
        <!--   加载mybatis的全局配置文件     -->
        <property name="mapperLocations" value="classpath:org/spoto/dao/*Mapper.xml"/>
    </bean>

<!--  Mapper扫描器  -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--    扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开    -->
        <!--    对**.dao包内进行扫描    -->
        <property name="basePackage" value="org.spoto.dao"/>

    </bean>

<!-- 事务管理器，对mybatis操作数据库事务控制，spring使用jdbc的事务控制类   -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
    scope="singleton">
        <!--    数据源dataSource在applicationContext-mybatis.xml中配置    -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

<!--  注释的事务管理器@Transactional  -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>



</beans>